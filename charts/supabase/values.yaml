jwt:
  secretName: "jwt-creds"

smtp:
  secretName: "smtp-creds"

aws:
  secretName: "aws-credentials-config"

db:
  enabled: false
  secretName: "db-creds"
  persistence:
    enabled: false

studio:
  image:
    repository: supabase/studio
    tag: 20230127-6bfd87b
  environment:
    SUPABASE_URL: http://localhost
    SUPABASE_REST_URL: http://localhost/rest/v1/
    STUDIO_PG_META_URL: http://demo-supabase-kong.default.svc.cluster.local:8000/pg
    SUPABASE_PUBLIC_URL: http://localhost/
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    tls: []
      # - secretName: studio.localhost
      #   hosts:
      #     - studio.localhost
    hosts:
      - host: studio.localhost
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: api
              servicePort: 3000

auth:
  image:
    repository: supabase/gotrue
    tag: v2.125.1
    pullPolicy: IfNotPresent
  environment:
    DB_HOST: db.zhlhgviowjcuzlecywdv.supabase.co
    DB_PORT: "5432"
    DB_DRIVER: postgres
    DB_NAME: postgres
    GOTRUE_API_HOST: "127.0.0.1"
    GOTRUE_API_PORT: "9000"
    API_EXTERNAL_URL: "http://localhost:9000" # CHECK
    GOTRUE_SITE_URL: "https://api.staging.cocos.capital"
    GOTRUE_URI_ALLOW_LIST: "https://app.cocos.capital/*"
    GOTRUE_DISABLE_SIGNUP: "true"
    GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
    GOTRUE_JWT_ADMIN_ROLES: service_role
    GOTRUE_JWT_AUD: authenticated
    GOTRUE_JWT_EXP: "21600"
    GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
    GOTRUE_MAILER_AUTOCONFIRM: "false"
    GOTRUE_SMTP_ADMIN_EMAIL: "no-reply@cocos.capital"
    GOTRUE_SMTP_HOST: "smtp.sendgrid.net"
    GOTRUE_SMTP_PORT: "587"
    GOTRUE_SMTP_SENDER_NAME: "Cocos Capital"
    GOTRUE_EXTERNAL_PHONE_ENABLED: "false"
    GOTRUE_SMS_AUTOCONFIRM: "false"
    GOTRUE_MAILER_SUBJECTS_RECOVERY: "Reiniciar tu contrase√±a"
    GOTRUE_MAILER_URLPATHS_RECOVERY: "https://api.staging.cocos.capital/auth/v1/verify"
    GOTRUE_MAILER_TEMPLATES_RECOVERY: "https://app.staging.cocos.capital/templates/reset-password.html"
    GOTRUE_MAILER_URLPATHS_INVITE: "https://api.staging.cocos.capital/auth/v1/verify"
    GOTRUE_MAILER_URLPATHS_CONFIRMATION: "https://api.staging.cocos.capital/auth/v1/verify"
    GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: "https://api.staging.cocos.capital/auth/v1/verify"
    GOTRUE_SECURITY_REFRESH_TOKEN_ROTATION_ENABLED: "false" # WHY?
  resources:
    limits:
      cpu: "1"
      memory: 750Mi
    requests:
      cpu: 200m
      memory: 128Mi
  volumes: # Is necessary in auth? Or only in storage? Or in every container
    - name: "aws-credentials"
      secret:
        secretName: aws-credentials-config
        defaultMode: 420
  ingress:
    enabled: false

rest:
  image:
    repository: postgrest/postgrest
    tag: v9.0.1.20220717
  environment:
    DB_HOST: demo-supabase-db.default.svc.cluster.local
    DB_PORT: "5432"
    DB_DRIVER: postgres
    DB_NAME: postgres
    DB_SSL: allow
    PGRST_DB_SCHEMA: public,storage
    PGRST_DB_ANON_ROLE: anon
    PGRST_DB_USE_LEGACY_GUCS: "false"

realtime:
  enabled: false

meta:
  image:
    repository: supabase/postgres-meta
    tag: v0.75.0
    pullPolicy: IfNotPresent
  environment:
    DB_HOST: db.zhlhgviowjcuzlecywdv.supabase.co
    DB_PORT: "5432"
    DB_DRIVER: postgres
    DB_NAME: postgres
    DB_SSL: disable
    PG_META_PORT: "8080"

storage:
  image:
    repository: supabase/storage-api
    tag: v0.26.1
    pullPolicy: IfNotPresent
  environment:
    DB_HOST: db.zhlhgviowjcuzlecywdv.supabase.co
    DB_PORT: "5432"
    DB_DRIVER: postgres
    DB_NAME: postgres
    POSTGREST_URL: http://localhost:3000
    PGOPTIONS: -c search_path=storage,public
    FILE_SIZE_LIMIT: '52428800'
    STORAGE_BACKEND: s3
    TENANT_ID: cocos
    REGION: us-east-1
    NODE_ENV: production
  persistence: 
    enabled: false
    accessModes:
      - ReadWriteOnce
    size: 4Gi
    storageClassName: standard
    annotations:
      helm.sh/resource-policy: "keep"
  resources:
    limits:
      cpu: '1'
      memory: 750Mi
    requests:
      cpu: 100m
      memory: 128Mi
  volumeMounts:
    - name: aws-credentials
      mountPath: /root/.aws/credentials
      subPath: .aws

kong:
  image:
    repository: kong
    tag: 2.8.1
    pullPolicy: IfNotPresent
  environment:
    KONG_DATABASE: "off"
    KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
    KONG_DNS_ORDER: LAST,A,CNAME
    KONG_PLUGINS: request-transformer,cors,key-auth,acl,request-termination
    KONG_LOG_LEVEL: debug
  resources:
    limits:
      cpu: '1'
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 512Mi

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    tls: []
      # - secretName: localhost
      #   hosts:
      #     - localhost
    hosts:
      - host: localhost
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: api
              servicePort: 80